# Environment Configuration Example
# Grand Central Terminus - Birmingham Career Exploration
# Copy this file to .env.local and fill in your actual values

# ============================================================================
# NEXT.JS CONFIGURATION
# ============================================================================

# Disable Next.js telemetry (optional)
NEXT_TELEMETRY_DISABLED=1

# Enable file watching for development (optional)
WATCHPACK_POLLING=true

# Node environment (automatically set by Next.js)
# NODE_ENV=development|production

# ============================================================================
# SUPABASE CONFIGURATION
# ============================================================================

# Server-side Supabase URL (used in API routes and scripts)
# Get from: Supabase Dashboard → Settings → API → Project URL
SUPABASE_URL=https://your-project.supabase.co

# Server-side Supabase Anon Key (used in API routes and scripts)
# Get from: Supabase Dashboard → Settings → API → Project API keys → anon/public
SUPABASE_ANON_KEY=your-anon-key-here

# Client-side Supabase URL (exposed to browser)
# Must have NEXT_PUBLIC_ prefix to be available in browser
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co

# Client-side Supabase Anon Key (exposed to browser)
# Must have NEXT_PUBLIC_ prefix to be available in browser
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key-here

# Database password (for direct PostgreSQL access, if needed)
SUPABASE_DB_PASSWORD=your-db-password

# Supabase Service Role Key (KEEP SECRET! Bypasses Row Level Security)
# Get from: Supabase Dashboard → Settings → API → Project API keys → service_role
# Required for: Database migrations, admin operations
# WARNING: Never expose this to client-side code or commit to version control
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key-here

# ============================================================================
# AI API CONFIGURATION
# ============================================================================

# Anthropic Claude API Key (for live choice generation)
# Get from: https://console.anthropic.com/settings/keys
# Used in: /app/api/live-choices/route.ts
ANTHROPIC_API_KEY=sk-ant-api03-xxxxx

# Google Gemini API Key (for skill-aware dialogue)
# Get from: https://aistudio.google.com/app/apikey
# Used in: Samuel dialogue system
GEMINI_API_KEY=AIzaSyxxxxx

# ============================================================================
# ADMIN CONFIGURATION
# ============================================================================

# Admin API Authentication Token
# For local development, use simple token like "admin"
# For production, generate secure token with: openssl rand -hex 32
# Used in: /app/api/admin/* routes
ADMIN_API_TOKEN=admin

# ============================================================================
# FEATURE FLAGS
# ============================================================================

# Enable semantic similarity for choice filtering
# Set to 'true' to use ML-based similarity detection, 'false' for simple string matching
ENABLE_SEMANTIC_SIMILARITY=false

# Choice similarity threshold (0.0 to 1.0)
# Choices with similarity above this threshold will be filtered out
# Higher = more strict filtering
CHOICE_SIMILARITY_THRESHOLD=0.85

# ============================================================================
# MONITORING & ERROR TRACKING
# ============================================================================

# Sentry DSN for server-side error tracking
# Get from: https://sentry.io/settings/[your-org]/projects/[your-project]/keys/
# Used in: Server-side error tracking
SENTRY_DSN=https://xxxxx@xxxxx.ingest.sentry.io/xxxxx

# Sentry DSN for client-side error tracking
# Must have NEXT_PUBLIC_ prefix to be available in browser
NEXT_PUBLIC_SENTRY_DSN=https://xxxxx@xxxxx.ingest.sentry.io/xxxxx

# Enable Sentry in development (optional)
# Set to 'true' to test error tracking in development
ENABLE_SENTRY=false

# ============================================================================
# DEVELOPMENT CONFIGURATION
# ============================================================================

# Enable verbose logging (optional)
# Set to 'true' for detailed debug output in development
NEXT_PUBLIC_VERBOSE_LOGGING=false

# Development server port (optional)
# PORT=3003

# ============================================================================
# PRODUCTION CHECKLIST
# ============================================================================

# Before deploying to production, ensure:
# ✅ All required variables are set (see lib/env-validation.ts)
# ✅ No sensitive keys have NEXT_PUBLIC_ prefix (they'd be exposed to browser)
# ✅ Service role key is only set in secure server environment
# ✅ Sentry DSN is configured for error tracking
# ✅ Admin token is rotated from development value
# ✅ Database backup is created before any migrations

# ============================================================================
# SECURITY NOTES
# ============================================================================

# NEVER commit .env.local to version control
# NEVER expose service role keys to client-side code
# ALWAYS use NEXT_PUBLIC_ prefix only for non-sensitive client-side values
# ALWAYS rotate admin tokens between environments
# ALWAYS create database backups before migrations

# For more information, see:
# - docs/DEPLOYMENT_CHECKLIST.md
# - lib/env-validation.ts
# - scripts/MIGRATION_ROLLBACK.md
