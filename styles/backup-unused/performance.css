/**
 * Performance-based visual feedback
 * Subtle CSS changes based on performance level
 * No visible metrics or scores
 */

/* Base performance classes */
.performance-struggling {
  --message-delay: 0.8s;
  --text-opacity: 0.95;
  --choice-spacing: 2rem;
  --breathing-hint: 0.4;
}

.performance-exploring {
  --message-delay: 0.6s;
  --text-opacity: 1;
  --choice-spacing: 1.5rem;
  --breathing-hint: 0.2;
}

.performance-flowing {
  --message-delay: 0.4s;
  --text-opacity: 1;
  --choice-spacing: 1.25rem;
  --breathing-hint: 0.1;
}

.performance-mastering {
  --message-delay: 0.3s;
  --text-opacity: 1;
  --choice-spacing: 1rem;
  --breathing-hint: 0.05;
}

/* Struggling: More space, slower pace, calming colors */
.performance-struggling .story-message {
  animation-duration: var(--message-delay);
  margin-bottom: var(--choice-spacing);
}

.performance-struggling .choice-container {
  gap: var(--choice-spacing);
}

.performance-struggling .pokemon-text-box {
  border-color: rgba(168, 85, 247, 0.3);
  background: linear-gradient(
    135deg,
    rgba(168, 85, 247, 0.02),
    rgba(139, 92, 246, 0.02)
  );
}

/* Subtle breathing animation for struggling players */
.performance-struggling .card {
  animation: gentle-breathe 6s ease-in-out infinite;
}

@keyframes gentle-breathe {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.01);
  }
}

/* Exploring: Encouraging movement */
.performance-exploring .story-message {
  transition: all 0.4s ease;
}

.performance-exploring .choice-button:hover {
  transform: translateX(2px);
  transition: transform 0.3s ease;
}

/* Flowing: Smooth and harmonious */
.performance-flowing .story-message {
  animation: flow-in 0.5s ease-out;
}

@keyframes flow-in {
  from {
    opacity: 0;
    transform: translateY(5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.performance-flowing .pokemon-text-box {
  border-color: rgba(74, 222, 128, 0.3);
  box-shadow: 0 0 20px rgba(74, 222, 128, 0.05);
}

/* Mastering: Subtle depth and clarity */
.performance-mastering .story-message {
  animation: master-arrival 0.3s ease-out;
}

@keyframes master-arrival {
  from {
    opacity: 0.8;
  }
  to {
    opacity: 1;
  }
}

.performance-mastering .choice-button {
  position: relative;
}

.performance-mastering .choice-button::after {
  content: '';
  position: absolute;
  inset: -2px;
  border-radius: inherit;
  padding: 2px;
  background: linear-gradient(
    135deg,
    transparent,
    rgba(168, 85, 247, 0.1),
    transparent
  );
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: exclude;
  opacity: 0;
  transition: opacity 0.3s;
}

.performance-mastering .choice-button:hover::after {
  opacity: 1;
}

/* Text clarity adjustments */
.performance-struggling .text-premium {
  font-weight: 500;
  letter-spacing: 0.02em;
  line-height: 1.7;
}

.performance-flowing .text-premium {
  font-weight: 400;
  letter-spacing: 0.01em;
  line-height: 1.6;
}

.performance-mastering .text-premium {
  font-weight: 400;
  letter-spacing: normal;
  line-height: 1.6;
  color: rgba(var(--foreground-rgb), 0.95);
}

/* Choice button adjustments */
.performance-struggling .choice-button {
  padding: 1rem 1.5rem;
  font-size: 1rem;
  transition: all 0.4s ease;
}

.performance-struggling .choice-button:hover {
  background: rgba(168, 85, 247, 0.08);
}

.performance-flowing .choice-button {
  padding: 0.875rem 1.25rem;
  transition: all 0.2s ease;
}

.performance-mastering .choice-button {
  padding: 0.75rem 1rem;
  transition: all 0.15s ease;
}

/* Whisper visibility based on performance */
.performance-struggling .story-message[data-type="whisper"] {
  opacity: 0.9;
  font-size: 0.95rem;
}

.performance-mastering .story-message[data-type="whisper"] {
  opacity: 0.8;
  font-size: 0.875rem;
}

/* Forest ambiance intensity */
.performance-struggling {
  --forest-opacity: 0.03;
}

.performance-exploring {
  --forest-opacity: 0.05;
}

.performance-flowing {
  --forest-opacity: 0.07;
}

.performance-mastering {
  --forest-opacity: 0.1;
}

.forest-background::before {
  content: '';
  position: fixed;
  inset: 0;
  background: radial-gradient(
    circle at center,
    transparent,
    rgba(34, 197, 94, var(--forest-opacity))
  );
  pointer-events: none;
  z-index: -1;
}

/* Smooth transitions between performance levels */
[class*="performance-"] {
  transition: 
    --message-delay 2s ease,
    --text-opacity 2s ease,
    --choice-spacing 2s ease,
    --forest-opacity 3s ease;
}